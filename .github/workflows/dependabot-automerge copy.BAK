name: Auto-merge Dependabot PRs

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review:
    types: [submitted]
  check_suite:
    types: [completed]

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    
    steps:
      - name: Check if PR has automerge label
        id: check-label
        uses: actions/github-script@v7
        with:
          script: |
            const labels = context.payload.pull_request?.labels || [];
            const hasAutomergeLabel = labels.some(label => label.name === 'automerge');
            return hasAutomergeLabel;
          result-encoding: string

      - name: Get PR details
        id: pr-details
        if: steps.check-label.outputs.result == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            
            return {
              base_branch: pr.base.ref,
              head_branch: pr.head.ref,
              mergeable: pr.mergeable,
              mergeable_state: pr.mergeable_state
            };

      - name: Auto-approve PR
        if: steps.check-label.outputs.result == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              event: 'APPROVE',
              body: 'Auto-approving Dependabot PR with automerge label'
            });

      - name: Enable auto-merge
        if: steps.check-label.outputs.result == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              merge_method: 'squash' // or 'merge' or 'rebase'
            });

  # Alternative approach using GitHub CLI
  # auto-merge-cli:
  #   runs-on: ubuntu-latest
  #   if: github.actor == 'dependabot[bot]' && contains(github.event.pull_request.labels.*.name, 'automerge')
    
  #   steps:
  #     - name: Enable auto-merge with GitHub CLI
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: |
  #         gh pr merge ${{ github.event.pull_request.number }} \
  #           --repo ${{ github.repository }} \
  #           --squash \
  #           --auto \
  #           --delete-branch